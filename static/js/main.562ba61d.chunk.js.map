{"version":3,"sources":["components/ValueLabel.js","components/Slider.jsx","components/Navitem.jsx","components/Element.jsx","algorithms/sorting.js","components/Arraybar.jsx","components/SortingVisualizer.jsx","App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","thumb","transform","open","offset","zIndex","typography","body2","fontSize","pxToRem","lineHeight","transition","transitions","create","duration","shortest","top","left","transformOrigin","position","circle","display","alignItems","justifyContent","width","height","borderRadius","backgroundColor","label","color","palette","primary","contrastText","name","props","children","classes","className","value","valueLabelDisplay","React","cloneElement","clsx","PrettoSlider","root","marginTop","marginRight","marginLeft","active","disabled","border","boxShadow","valueLabel","track","rail","Slider","MySlider","state","this","onRef","undefined","defaultValue","min","max","ValueLabelComponent","ValueLabel","onChange","event","newValue","Component","Navitem","handleChangeItem","item","setState","curItem","onChangeItem","type","Button","id","onClick","Dropdown","Toggle","Menu","itemList","map","Item","key","onSelect","HEIGHT","window","innerHeight","Element","setElement","setAnimation","animation","animationType","DEFAULT","animationname","RED","BLUE","YELLOW","PURPLE","style","swap","arr","i","j","temp","quickSortHelper","l","r","animations","partitionIdx","pivot","pivotElement","push","partition","Math","floor","random","getRandomPivot","mergeSortHelper","m","n1","n2","L","Array","R","k","idxL","idxR","isSorted","length","merge","heapify","n","largestIdx","countSort","minValue","exp","radix","sortedArr","buckets","fill","firstBuckets","bucketIdx","overwriting","includes","unshift","WIDTH","innerWidth","randomIntFromInterval","Arraybar","generate","arraySize","ceil","array","isVisualized","constructInitArray","setArray","algorithm","speed","resetAnimations","bubbleSort","bubbleSortAnimations","insertionSort","insertionSortAnimations","quickSort","quickSortAnimations","mergeSort","mergeSortAnimations","heapSort","heapSortAnimations","maxValue","radixSort","radixSortAnimations","bucketSortAnimations","setTimeout","finishVisualization","barOneIdx","barTwoIdx","barOneValue","barTwoValue","barIdx","isPivot","idx","isBucket","bucketColor","ref","algorithms","speeds","SortingVisualizer","handleChangeAlgorithm","curAlgorithm","handleChangeSpeed","speedname","curSpeed","handleRandomGenerate","arrayBar","randomGenerateArray","handleChangeArraySize","handleVisualize","slider","visualize","handleFinishVisualization","Navbar","variant","Brand","href","Nav","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.562ba61d.chunk.js","sourcesContent":["import React from \"react\";\nimport clsx from \"clsx\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  thumb: {\n    \"&$open\": {\n      \"& $offset\": {\n        transform: \"scale(1) translateY(-10px)\"\n      }\n    }\n  },\n  open: {},\n  offset: {\n    zIndex: 1,\n    ...theme.typography.body2,\n    fontSize: theme.typography.pxToRem(12),\n    lineHeight: 1.2,\n    transition: theme.transitions.create([\"transform\"], {\n      duration: theme.transitions.duration.shortest\n    }),\n    top: -34,\n    left: \"calc(-50% + -4px)\",\n    transformOrigin: \"bottom center\",\n    transform: \"scale(0)\",\n    position: \"absolute\"\n  },\n  circle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: 24,\n    height: 24,\n    borderRadius: \"50% 50% 50% 0\",\n    backgroundColor: \"currentColor\",\n    transform: \"rotate(-45deg)\"\n  },\n  label: {\n    color: theme.palette.primary.contrastText,\n    transform: \"rotate(45deg)\"\n  }\n});\n\nfunction ValueLabel(props) {\n  const {\n    children,\n    classes,\n    className,\n    open,\n    value,\n    valueLabelDisplay\n  } = props;\n\n  if (valueLabelDisplay === \"off\") {\n    return children;\n  }\n\n  return React.cloneElement(\n    children,\n    {\n      className: clsx(\n        children.props.className,\n        {\n          [classes.open]: open || valueLabelDisplay === \"on\"\n        },\n        classes.thumb\n      )\n    },\n    <span className={clsx(classes.offset, className)}>\n      <span className={classes.circle}>\n        <span className={classes.label}>{value}</span>\n      </span>\n    </span>\n  );\n}\n\nexport default withStyles(styles, { name: \"PrivateValueLabel\" })(ValueLabel);\n","import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Slider from \"@material-ui/core/Slider\";\nimport ValueLabel from \"./ValueLabel\";\n\nconst PrettoSlider = withStyles({\n  root: {\n    color: \"rgb(76, 187, 159)\",\n    height: 8,\n    width: 160,\n    marginTop: 2,\n    marginRight: 32,\n    marginLeft: -15\n  },\n  active: {},\n  disabled: {},\n  thumb: {\n    height: 20,\n    width: 20,\n    backgroundColor: \"#fff\",\n    border: \"2px solid currentColor\",\n    marginTop: -6,\n    marginLeft: -7,\n    \"&$disabled\": {\n      width: 20,\n      height: 20,\n      backgroundColor: \"rgb(252, 4, 4)\",\n      marginTop: -6,\n      marginLeft: -7,\n      \"&:hover\": {\n        boxShadow: \"none\"\n      }\n    },\n    \"&:focus,&:hover,&$active\": {\n      boxShadow: \"inherit\"\n    }\n  },\n  valueLabel: {\n    left: \"calc(-50% + 4px)\",\n    top: \"-26px\"\n  },\n  track: {\n    height: 8,\n    borderRadius: 4\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4\n  }\n})(Slider);\n\nclass MySlider extends Component {\n  state = { disabled: false };\n\n  componentDidMount() {\n    this.props.onRef(this);\n  }\n\n  componentWillUnmount() {\n    this.props.onRef(undefined);\n  }\n\n  render() {\n    return (\n      <PrettoSlider\n        valueLabelDisplay=\"auto\"\n        defaultValue={75}\n        min={8}\n        max={150}\n        disabled={this.state.disabled}\n        // ValueLabelComponent={ValueLabelComponent}\n        ValueLabelComponent={ValueLabel}\n        onChange={(event, newValue) => this.props.onChange(event, newValue)}\n      />\n    );\n  }\n}\n\nexport default MySlider;\n","import React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Dropdown } from \"react-bootstrap\";\nimport \"./Navbar.css\";\n\nclass Navitem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { name: props.name, type: props.type, curItem: props.curItem };\n  }\n\n  handleChangeItem = item => {\n    this.setState({ curItem: item });\n    this.props.onChangeItem(item);\n  };\n\n  render() {\n    const { type } = this.state;\n    if (type === \"button\") {\n      return (\n        <li>\n          <Button id=\"button\" onClick={() => this.props.onClick()}>\n            {this.state.name}\n          </Button>\n        </li>\n      );\n    } else {\n      return (\n        <li>\n          <Dropdown>\n            <Dropdown.Toggle id=\"dropdown-toggle\">\n              {this.state.name + \" : \" + this.state.curItem + \"  \"}\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu>\n              {this.props.itemList.map(item => {\n                return (\n                  <Dropdown.Item\n                    key={item}\n                    onSelect={() => this.handleChangeItem(item)}\n                    id=\"dropdown-item\"\n                  >\n                    {item}\n                  </Dropdown.Item>\n                );\n              })}\n            </Dropdown.Menu>\n          </Dropdown>\n        </li>\n      );\n    }\n  }\n}\n\nexport default Navitem;\n","import React, { Component } from \"react\";\nimport \"./Arraybar.css\";\n\nconst HEIGHT = window.innerHeight;\n\nclass Element extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: props.value,\n      width: props.width,\n      animation: animationType.DEFAULT\n    };\n  }\n\n  componentDidMount() {\n    this.props.onRef(this);\n  }\n\n  componentWillUnmount() {\n    this.props.onRef(undefined);\n  }\n\n  setElement = (value, width) => {\n    this.setState({ value, width });\n  };\n\n  setAnimation = animation => {\n    this.setState({ animation });\n  };\n\n  render() {\n    let { width, value, animation } = this.state;\n    let animationname =\n      animation === animationType.RED\n        ? \"red\"\n        : animation === animationType.BLUE\n        ? \"blue\"\n        : animation === animationType.YELLOW\n        ? \"yellow\"\n        : animation === animationType.PURPLE\n        ? \"purple\"\n        : \"\";\n    return (\n      <div\n        className={`array-bar ${animationname}`}\n        style={{\n          width: `${width}px`,\n          height: `${(((value * HEIGHT) / 937) * 790) / 250}px`\n        }}\n      ></div>\n    );\n  }\n}\n\nexport default Element;\n\nexport const animationType = {\n  DEFAULT: 1,\n  RED: 2,\n  BLUE: 3,\n  YELLOW: 4,\n  PURPLE: 5\n};\n","function swap(arr, i, j) {\n  let temp = arr[i];\n  arr[i] = arr[j];\n  arr[j] = temp;\n}\n\n// bubble sort implentation\nexport function bubbleSort(arr) {\n  const n = arr.length;\n  let animations = [];\n\n  // bubble the maximum to the end\n  for (let i = 0; i < n; i++) {\n    for (let j = 0; j < n - i - 1; j++) {\n      // for comparing animation\n      animations.push([j, j + 1]);\n      animations.push([j, j + 1]);\n      animations.push([j, j + 1]);\n      if (arr[j] > arr[j + 1]) {\n        // swap\n        animations.push([j, j + 1, arr[j], arr[j + 1], j + 1 === n - i - 1]); // for swapping animation\n        swap(arr, j, j + 1);\n      } else {\n        animations.push([j, j + 1, arr[j + 1], arr[j], j + 1 === n - i - 1]); // not swapping\n      }\n    }\n  }\n\n  // final animation\n  animations.push([0, 0]);\n  animations.push([0, 0]);\n  animations.push([0, 0]);\n  animations.push([0, 0, arr[0], arr[0], true]);\n\n  return animations;\n}\n\n// insertion sort implentation\nexport function insertionSort(arr) {\n  const n = arr.length;\n  let animations = [];\n\n  // insert every element\n  for (let i = 1; i < n; i++) {\n    let j;\n    let temp = arr[i];\n\n    // find the spot to insert in sorted array\n    for (j = i; j > 0 && arr[j - 1] > temp; j--) {\n      // for comparing animation\n      animations.push(j);\n      animations.push(j);\n      animations.push(j);\n\n      // for overwriting animation\n      animations.push([j, arr[j - 1], i === n - 1]);\n      arr[j] = arr[j - 1];\n    }\n\n    // for comparing animation\n    animations.push(j);\n    animations.push(j);\n    animations.push(j);\n\n    // for overwriting animation\n    animations.push([j, temp, i === n - 1]);\n\n    arr[j] = temp;\n\n    // sorted animations\n    for (let k = j - 1; k >= 0; k--) {\n      // for comparing animation\n      animations.push(k);\n      animations.push(k);\n      animations.push(k);\n\n      // for overwriting animation\n      animations.push([k, arr[k], i === n - 1]);\n    }\n  }\n\n  return animations;\n}\n\n// quick sort implentation\nfunction getRandomPivot(l, r) {\n  return l + Math.floor(Math.random() * (r - l + 1));\n}\n\nfunction partition(arr, l, r, pivot, animations) {\n  let partitionIdx = l - 1;\n  const pivotElement = arr[pivot];\n\n  animations.push([r, pivot]);\n  animations.push([r, pivot]);\n  animations.push([r, pivot]);\n  animations.push([r, pivot, arr[r], arr[pivot], 2]);\n  swap(arr, r, pivot); // swap pivot with right most elemtn;\n\n  for (let i = l; i < r; i++) {\n    animations.push([i, partitionIdx + 1]);\n    animations.push([i, partitionIdx + 1]);\n    animations.push([i, partitionIdx + 1]);\n\n    if (arr[i] <= pivotElement) {\n      animations.push([i, partitionIdx + 1, arr[i], arr[partitionIdx + 1], 3]);\n      swap(arr, i, ++partitionIdx);\n    } else {\n      animations.push([i, partitionIdx + 1, arr[partitionIdx + 1], arr[i], 3]);\n    }\n  }\n\n  animations.push([r, partitionIdx + 1]);\n  animations.push([r, partitionIdx + 1]);\n  animations.push([r, partitionIdx + 1]);\n  animations.push([r, partitionIdx + 1, arr[r], arr[partitionIdx + 1], 1]);\n  swap(arr, r, ++partitionIdx); // swap pivot back\n  return partitionIdx;\n}\n\nfunction quickSortHelper(arr, l, r, animations) {\n  if (l > r) return;\n  const pivot = getRandomPivot(l, r);\n  const partitionIdx = partition(arr, l, r, pivot, animations);\n\n  quickSortHelper(arr, partitionIdx + 1, r, animations);\n  quickSortHelper(arr, l, partitionIdx - 1, animations);\n}\n\nexport function quickSort(arr) {\n  let animations = [];\n  quickSortHelper(arr, 0, arr.length - 1, animations);\n  return animations;\n}\n\n// merge sort implentation\nfunction merge(arr, l, r, m, animations) {\n  const n1 = m - l + 1;\n  const n2 = r - m;\n  const L = new Array(n1);\n  const R = new Array(n2);\n\n  // copy left array\n  for (let i = 0; i < n1; i++) {\n    L[i] = arr[i + l];\n  }\n\n  // copy right array\n  for (let i = 0; i < n2; i++) {\n    R[i] = arr[i + m + 1];\n  }\n\n  let k = l;\n  let idxL = 0; // index for left array\n  let idxR = 0; // index for right array\n  const isSorted = l === 0 && r === arr.length - 1;\n\n  // merge two arrays\n  while (idxL < n1 && idxR < n2) {\n    animations.push([idxL + l, idxR + m + 1]); // comparing elements at i ,j in the orignal array\n    animations.push([idxL + l, idxR + m + 1]); // comparing elements at i ,j in the orignal array\n    animations.push([idxL + l, idxR + m + 1]); // comparing elements at i ,j in the orignal array\n\n    if (L[idxL] < R[idxR]) {\n      animations.push([k, L[idxL], isSorted, idxL + l]); // replace element at k of the original array with L[idxL]\n      arr[k++] = L[idxL++];\n    } else {\n      animations.push([k, R[idxR], false, k]); // replace element at k of the original array with R[idxR];\n      arr[k++] = R[idxR++];\n    }\n  }\n\n  // add remaining elements\n  while (idxL < n1) {\n    animations.push([idxL + l, idxL + l]);\n    animations.push([idxL + l, idxL + l]);\n    animations.push([idxL + l, idxL + l]);\n    animations.push([k, L[idxL], isSorted, idxL + l]); // replace element at k of the original array with L[idxL]\n    arr[k++] = L[idxL++];\n  }\n\n  while (idxR < n2) {\n    animations.push([idxR + m + 1, idxR + m + 1]);\n    animations.push([idxR + m + 1, idxR + m + 1]);\n    animations.push([idxR + m + 1, idxR + m + 1]);\n    animations.push([k, R[idxR], false, k]); // replace element at k of the original array with R[idxR];\n    arr[k++] = R[idxR++];\n  }\n\n  // sorted animations\n  if (isSorted) {\n    for (let i = idxL + l; i <= r; i++) {\n      animations.push([i, i]);\n      animations.push([i, i]);\n      animations.push([i, i]);\n      animations.push([i, arr[i], isSorted, i]);\n    }\n  }\n}\n\nfunction mergeSortHelper(arr, l, r, animations) {\n  if (l === r) return;\n\n  const m = l + Math.floor((r - l) / 2);\n  mergeSortHelper(arr, l, m, animations);\n  mergeSortHelper(arr, m + 1, r, animations);\n  merge(arr, l, r, m, animations);\n}\n\nexport function mergeSort(arr) {\n  let animations = [];\n  mergeSortHelper(arr, 0, arr.length - 1, animations);\n  return animations;\n}\n\n// heap sort implentation\nfunction heapify(arr, n, i, animations) {\n  if (n === 0) return;\n  let largestIdx = i;\n  let l = 2 * i + 1; // left child\n  let r = 2 * i + 2; // right child\n\n  if (l < n && arr[l] > arr[largestIdx]) largestIdx = l; // heapify left child\n  if (r < n && arr[r] > arr[largestIdx]) largestIdx = r; // heapify right child\n\n  animations.push([i, largestIdx]);\n  animations.push([i, largestIdx]);\n  animations.push([i, largestIdx]);\n  // if more heapify needed\n  if (largestIdx !== i) {\n    // swap\n    animations.push([i, largestIdx, arr[i], arr[largestIdx], false]);\n    swap(arr, i, largestIdx);\n\n    // heapify affectd subtrees\n    heapify(arr, n, largestIdx, animations);\n  } else {\n    animations.push([i, largestIdx, arr[largestIdx], arr[i], false]);\n  }\n}\n\nexport function heapSort(arr) {\n  const n = arr.length;\n  let animations = [];\n\n  // build max heap\n  for (let i = Math.floor(n / 2) - 1; i >= 0; i--)\n    heapify(arr, n, i, animations);\n\n  // extract sorted element\n  for (let i = n - 1; i >= 0; i--) {\n    // swap to the end\n    animations.push([0, i]);\n    animations.push([0, i]);\n    animations.push([0, i]);\n    animations.push([0, i, arr[0], arr[i], true]);\n    swap(arr, 0, i);\n\n    // call max heapify on the reduced heap\n    heapify(arr, i, 0, animations);\n  }\n\n  return animations;\n}\n\n// radix sort implentation\nfunction countSort(arr, n, minValue, exp, radix, animations) {\n  let sortedArr = new Array(n);\n  let buckets = new Array(radix);\n  sortedArr.fill(0);\n  buckets.fill(0);\n  let firstBuckets = [];\n\n  // count occurences of digit of arr[i]\n  for (let i = 0; i < n; i++) {\n    const bucketIdx = Math.floor((arr[i] - minValue) / exp) % radix;\n\n    // linearly scan for buckets\n    animations.push([i, 0]);\n    animations.push([i, 0]);\n    animations.push([i, 0]);\n    animations.push([i, arr[i]]);\n    buckets[bucketIdx]++;\n  }\n\n  // change count[i] so that count[i] now contains actual position\n  for (let i = 1; i < radix; i++) buckets[i] += buckets[i - 1];\n\n  // mark first bucket's element as yellow\n  for (let i of buckets) firstBuckets.push(i - 1);\n\n  // overwriting animations\n  let overwriting = [];\n\n  // build the shadow array\n  for (let i = n - 1; i >= 0; i--) {\n    const bucketIdx = Math.floor((arr[i] - minValue) / exp) % radix;\n    if (firstBuckets.includes(buckets[bucketIdx] - 1)) {\n      overwriting.unshift([buckets[bucketIdx] - 1, arr[i], true]);\n      overwriting.unshift([buckets[bucketIdx] - 1, 3]);\n      overwriting.unshift([buckets[bucketIdx] - 1, 3]);\n      overwriting.unshift([buckets[bucketIdx] - 1, 3]);\n    } else {\n      overwriting.push([buckets[bucketIdx] - 1, 0]);\n      overwriting.push([buckets[bucketIdx] - 1, 0]);\n      overwriting.push([buckets[bucketIdx] - 1, 0]);\n      overwriting.push([buckets[bucketIdx] - 1, arr[i]]);\n    }\n    sortedArr[--buckets[bucketIdx]] = arr[i];\n  }\n\n  for (let animation of overwriting) animations.push(animation);\n\n  // copy sorted array;\n  for (let i = 0; i < n; i++) arr[i] = sortedArr[i];\n\n  // remove bucket yellow color\n  for (let i of firstBuckets) {\n    animations.push([i, 1]);\n    animations.push([i, 1]);\n    animations.push([i, 1]);\n    animations.push([i, arr[i]]);\n  }\n}\n\nexport function radixSort(arr, radix) {\n  let animations = [];\n  const n = arr.length;\n\n  // find maximum and minimum to get the most number of digits\n  let maxValue = arr[0];\n  let minValue = arr[0];\n  for (let i = 1; i < arr.length; i++) {\n    maxValue = Math.max(maxValue, arr[i]);\n    minValue = Math.min(minValue, arr[i]);\n  }\n\n  // repeated counting sort for each digit\n  for (let exp = 1; (maxValue - minValue) / exp >= 1; exp *= radix)\n    countSort(arr, n, minValue, exp, radix, animations);\n\n  // firnish sorted animations\n  for (let i = 0; i < n; i++) {\n    animations.push([i, 2]);\n    animations.push([i, 2]);\n    animations.push([i, 2]);\n    animations.push([i, arr[i]]);\n  }\n\n  return animations;\n}\n\n// bucket sort implentation\nexport function bucketSort(arr) {}\n","import React, { Component } from \"react\";\nimport Element from \"./Element\";\nimport { animationType } from \"./Element\";\nimport \"./Arraybar.css\";\nimport {\n  bubbleSort,\n  insertionSort,\n  quickSort,\n  mergeSort,\n  heapSort,\n  radixSort,\n  bucketSort\n} from \"../algorithms/sorting\";\n\nconst HEIGHT = window.innerHeight;\nconst WIDTH = window.innerWidth;\n\nfunction randomIntFromInterval(min, max) {\n  return min + Math.floor(Math.random() * (max - min + 1));\n}\n\nclass Arraybar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { generate: 0 };\n\n    // construct initial array\n    this.arraySize = 75; // default array size\n    this.width = Math.ceil((900 / this.arraySize / 1920) * WIDTH); // width of the array bar depends on the array size\n    this.array = [];\n    this.isVisualized = false;\n    this.constructInitArray();\n  }\n\n  componentDidMount() {\n    this.props.onRef(this);\n  }\n\n  componentWillUnmount() {\n    this.props.onRef(undefined);\n  }\n\n  constructInitArray() {\n    for (let i = 0; i < this.arraySize; i++) {\n      this.array.push(randomIntFromInterval(10, 250));\n    }\n  }\n\n  setArray() {\n    for (let i = 0; i < this.array.length; i++) {\n      this[`element-${i}`].setElement(this.array[i], this.width);\n      this[`element-${i}`].setAnimation(animationType.DEFAULT);\n    }\n  }\n\n  randomGenerateArray() {\n    if (this.isVisualized) return;\n    this.width = Math.ceil((900 / this.arraySize / 1920) * WIDTH); // reset width\n    this.array = []; // reset array\n\n    for (let i = 0; i < this.arraySize; i++) {\n      this.array.push(randomIntFromInterval(10, 250));\n    }\n\n    this.setState({ generate: this.state.generate ^ 1 }, this.setArray);\n  }\n\n  resetAnimations() {\n    for (let i = 0; i < this.arraySize; i++) {\n      this[`element-${i}`].setAnimation(animationType.DEFAULT);\n    }\n  }\n\n  visualize(algorithm, speed) {\n    if (this.isVisualized) return;\n    this.isVisualized = true;\n\n    this.resetAnimations();\n\n    let animations = [];\n    switch (algorithm) {\n      case \"Bubble Sort\":\n        animations = bubbleSort(this.array);\n        this.bubbleSortAnimations(animations, speed);\n        break;\n      case \"Insertion Sort\":\n        animations = insertionSort(this.array);\n        this.insertionSortAnimations(animations, speed);\n        break;\n      case \"Quick Sort\":\n        animations = quickSort(this.array);\n        this.quickSortAnimations(animations, speed);\n        break;\n      case \"Merge Sort\":\n        animations = mergeSort(this.array);\n        this.mergeSortAnimations(animations, speed);\n        break;\n      case \"Heap Sort\":\n        animations = heapSort(this.array);\n        this.heapSortAnimations(animations, speed);\n        break;\n      case \"Radix Sort\":\n        const radix = 4;\n        animations = radixSort(this.array, radix);\n        this.radixSortAnimations(animations, speed);\n        break;\n      case \"Bucket Sort\":\n        animations = bucketSort(this.array);\n        this.bucketSortAnimations(animations, speed);\n        break;\n      default:\n        break;\n    }\n\n    // finish visualization\n    setTimeout(() => {\n      this.isVisualized = false;\n      this.props.finishVisualization();\n    }, 310 + animations.length * speed);\n  }\n\n  bubbleSortAnimations(animations, speed) {\n    for (let i = 0; i < animations.length; i++) {\n      if (i % 4 === 3) {\n        // swapping\n        const [\n          barOneIdx,\n          barTwoIdx,\n          barOneValue,\n          barTwoValue,\n          isSorted\n        ] = animations[i];\n        setTimeout(() => {\n          this[`element-${barOneIdx}`].setElement(barTwoValue, this.width);\n          this[`element-${barTwoIdx}`].setElement(barOneValue, this.width);\n          if (isSorted)\n            this[`element-${barTwoIdx}`].setAnimation(animationType.PURPLE);\n        }, 300 + i * speed);\n      } else {\n        // comparing\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const color =\n          i % 4 === 0\n            ? animationType.RED\n            : i % 4 === 1\n            ? animationType.BLUE\n            : animationType.DEFAULT;\n        setTimeout(() => {\n          this[`element-${barOneIdx}`].setAnimation(color);\n          this[`element-${barTwoIdx}`].setAnimation(color);\n        }, 300 + i * speed);\n      }\n    }\n  }\n\n  insertionSortAnimations(animations, speed) {\n    for (let i = 0; i < animations.length; i++) {\n      if (i % 4 === 3) {\n        // overwriting\n        const [barIdx, newValue, isSorted] = animations[i];\n        setTimeout(() => {\n          this[`element-${barIdx}`].setElement(newValue, this.width);\n          if (isSorted)\n            this[`element-${barIdx}`].setAnimation(animationType.PURPLE);\n        }, 300 + i * speed);\n      } else {\n        // comparing\n        const barIdx = animations[i];\n        const color =\n          i % 4 === 0\n            ? animationType.RED\n            : i % 4 === 1\n            ? animationType.BLUE\n            : animationType.DEFAULT;\n        setTimeout(() => {\n          this[`element-${barIdx}`].setAnimation(color);\n        }, 300 + i * speed);\n      }\n    }\n  }\n\n  quickSortAnimations(animations, speed) {\n    for (let i = 0; i < animations.length; i++) {\n      if (i % 4 === 3) {\n        // swapping\n        const [\n          barOneIdx,\n          barTwoIdx,\n          barOneValue,\n          barTwoValue,\n          isPivot\n        ] = animations[i];\n        setTimeout(() => {\n          this[`element-${barOneIdx}`].setElement(barTwoValue, this.width);\n          this[`element-${barTwoIdx}`].setElement(barOneValue, this.width);\n          if (isPivot === 1) {\n            this[`element-${barTwoIdx}`].setAnimation(animationType.PURPLE);\n          } else if (isPivot === 2) {\n            this[`element-${barOneIdx}`].setAnimation(animationType.YELLOW);\n          }\n        }, 300 + i * speed);\n      } else {\n        // comparing\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const color =\n          i % 4 === 0\n            ? animationType.RED\n            : i % 4 === 1\n            ? animationType.BLUE\n            : animationType.DEFAULT;\n        setTimeout(() => {\n          this[`element-${barOneIdx}`].setAnimation(color);\n          this[`element-${barTwoIdx}`].setAnimation(color);\n        }, 300 + i * speed);\n      }\n    }\n  }\n\n  mergeSortAnimations(animations, speed) {\n    for (let i = 0; i < animations.length; i++) {\n      if (i % 4 === 3) {\n        // overwriting\n        const [barIdx, newValue, isSorted] = animations[i];\n        setTimeout(() => {\n          this[`element-${barIdx}`].setElement(newValue, this.width);\n          if (isSorted) {\n            let idx = animations[i][3];\n            this[`element-${idx}`].setAnimation(animationType.PURPLE);\n          }\n        }, 300 + i * speed);\n      } else {\n        // comparing\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const color =\n          i % 4 === 0\n            ? animationType.RED\n            : i % 4 === 1\n            ? animationType.BLUE\n            : animationType.DEFAULT;\n        setTimeout(() => {\n          this[`element-${barOneIdx}`].setAnimation(color);\n          this[`element-${barTwoIdx}`].setAnimation(color);\n        }, 300 + i * speed);\n      }\n    }\n  }\n\n  heapSortAnimations(animations, speed) {\n    for (let i = 0; i < animations.length; i++) {\n      if (i % 4 === 3) {\n        // swapping\n        const [\n          barOneIdx,\n          barTwoIdx,\n          barOneValue,\n          barTwoValue,\n          isSorted\n        ] = animations[i];\n        setTimeout(() => {\n          this[`element-${barOneIdx}`].setElement(barTwoValue, this.width);\n          this[`element-${barTwoIdx}`].setElement(barOneValue, this.width);\n          if (isSorted)\n            this[`element-${barTwoIdx}`].setAnimation(animationType.PURPLE);\n        }, 300 + i * speed);\n      } else {\n        // comparing\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const color =\n          i % 4 === 0\n            ? animationType.RED\n            : i % 4 === 1\n            ? animationType.BLUE\n            : animationType.DEFAULT;\n        setTimeout(() => {\n          this[`element-${barOneIdx}`].setAnimation(color);\n          this[`element-${barTwoIdx}`].setAnimation(color);\n        }, 300 + i * speed);\n      }\n    }\n  }\n\n  radixSortAnimations(animations, speed) {\n    for (let i = 0; i < animations.length; i++) {\n      if (i % 4 === 3) {\n        // overwriting\n        const [barIdx, newValue, isBucket] = animations[i];\n        setTimeout(() => {\n          if (isBucket)\n            this[`element-${barIdx}`].setAnimation(animationType.YELLOW);\n          this[`element-${barIdx}`].setElement(newValue, this.width);\n        }, 300 + i * speed);\n      } else {\n        // comparing\n        const [barIdx, bucketColor] = animations[i];\n        let color =\n          i % 4 === 0\n            ? animationType.RED\n            : i % 4 === 1\n            ? animationType.BLUE\n            : animationType.DEFAULT;\n        if (bucketColor === 1) color = animationType.DEFAULT;\n        else if (bucketColor === 2) color = animationType.PURPLE;\n        setTimeout(() => {\n          this[`element-${barIdx}`].setAnimation(color);\n        }, 300 + i * speed);\n      }\n    }\n  }\n\n  bucketSortAnimations(animations, speed) {}\n\n  render() {\n    return (\n      <div className=\"array-container\">\n        {this.array.map((value, idx) => {\n          return (\n            <Element\n              key={idx}\n              value={value}\n              width={this.width}\n              onRef={ref => (this[`element-${idx}`] = ref)}\n            ></Element>\n          );\n        })}\n\n        <div\n          className=\"array-bar\"\n          key={\"extra\"}\n          style={{\n            height: `${(((250 * HEIGHT) / 937) * 790) / 250}px`\n          }}\n        ></div>\n      </div>\n    );\n  }\n}\n\nexport default Arraybar;\n","import React, { Component } from \"react\";\nimport { Navbar } from \"react-bootstrap\";\nimport { Nav } from \"react-bootstrap\";\nimport MySlider from \"./Slider\";\nimport Navitem from \"./Navitem\";\nimport Arraybar from \"./Arraybar\";\nimport \"./Navbar.css\";\n\nconst algorithms = [\n  \"Bubble Sort\",\n  \"Insertion Sort\",\n  \"Quick Sort\",\n  \"Merge Sort\",\n  \"Heap Sort\",\n  \"Radix Sort\",\n  \"Bucket Sort\"\n];\n\nconst speeds = [\"Fast\", \"Medium\", \"Slow\"];\n\nclass SortingVisualizer extends Component {\n  constructor() {\n    super();\n    this.curAlgorithm = \"Bubble Sort\";\n    this.curSpeed = \"Fast\";\n  }\n\n  handleChangeAlgorithm = algorithm => {\n    this.curAlgorithm = algorithm;\n  };\n\n  handleChangeSpeed = speedname => {\n    this.curSpeed = speedname;\n  };\n\n  handleRandomGenerate = () => {\n    this.arrayBar.randomGenerateArray();\n  };\n\n  handleChangeArraySize = (event, newValue) => {\n    if (newValue !== this.arrayBar.arraySize && !this.arrayBar.isVisualized) {\n      this.arrayBar.arraySize = newValue;\n      this.arrayBar.randomGenerateArray();\n    }\n  };\n\n  handleVisualize = () => {\n    let speed = 5;\n    switch (this.curSpeed) {\n      case \"Fast\":\n        speed = 5;\n        break;\n      case \"Medium\":\n        speed = 7;\n        break;\n      case \"Slow\":\n        speed = 9;\n        break;\n      default:\n        speed = 3;\n        break;\n    }\n    if (!this.arrayBar.isVisualized) this.slider.setState({ disabled: true });\n    this.arrayBar.visualize(this.curAlgorithm, speed);\n  };\n\n  handleFinishVisualization = () => {\n    this.slider.setState({ disabled: false });\n  };\n\n  render() {\n    return (\n      <div>\n        <Navbar variant=\"custom\">\n          <Navbar.Brand href=\"#home\">Sorting Visualizer</Navbar.Brand>\n          <Nav>\n            <Navitem\n              name={\"Visualize\"}\n              type={\"button\"}\n              onClick={this.handleVisualize}\n            />\n            <Navitem\n              name={\"Algorithms\"}\n              type={\"dropdown\"}\n              itemList={algorithms}\n              curItem={this.curAlgorithm}\n              onChangeItem={this.handleChangeAlgorithm}\n            />\n            <Navitem\n              name={\"Random Generate\"}\n              type={\"button\"}\n              onClick={this.handleRandomGenerate}\n            />\n            <MySlider\n              onChange={this.handleChangeArraySize}\n              onRef={ref => (this.slider = ref)}\n            />\n            <Navitem\n              name={\"Speed\"}\n              type={\"dropdown\"}\n              itemList={speeds}\n              curItem={this.curSpeed}\n              onChangeItem={this.handleChangeSpeed}\n            />\n          </Nav>\n        </Navbar>\n        <Arraybar\n          finishVisualization={this.handleFinishVisualization}\n          onRef={ref => (this.arrayBar = ref)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SortingVisualizer;\n","import React from \"react\";\nimport SortingVisualizer from \"./components/SortingVisualizer\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}