{"version":3,"sources":["components/Navitem.jsx","components/Element.jsx","algorithms/sorting.js","components/Arraybar.jsx","components/SortingVisualizer.jsx","App.js","serviceWorker.js","index.js"],"names":["Navitem","props","handleChangeItem","item","setState","curItem","onChangeItem","state","name","type","this","Button","id","onClick","Dropdown","Toggle","Menu","itemList","map","Item","key","onSelect","Component","HEIGHT","window","innerHeight","Element","setElement","value","width","setAnimation","animation","animationType","DEFAULT","onRef","undefined","animationname","RED","BLUE","YELLOW","PURPLE","className","style","height","swap","arr","i","j","temp","quickSortHelper","l","r","animations","partitionIdx","pivot","pivotElement","push","partition","Math","floor","random","getRandomPivot","mergeSortHelper","m","n1","n2","L","Array","R","k","idxL","idxR","isSorted","length","merge","heapify","n","largestIdx","WIDTH","innerWidth","randomIntFromInterval","min","max","Arraybar","generate","arraySize","ceil","array","isVisualized","constructInitArray","setArray","algorithm","speed","resetAnimations","bubbleSort","bubbleSortAnimations","insertionSort","insertionSortAnimations","quickSort","quickSortAnimations","mergeSort","mergeSortAnimations","heapSort","heapSortAnimations","radixSortAnimations","bucketSortAnimations","setTimeout","barOneIdx","barTwoIdx","barOneValue","barTwoValue","color","barIdx","newValue","isPivot","idx","ref","ValueLabelComponent","children","open","Tooltip","enterTouchDelay","title","PrettoSlider","withStyles","root","marginTop","marginRight","marginLeft","thumb","backgroundColor","border","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","algorithms","speeds","SortingVisualizer","handleChangeAlgorithm","curAlgorithm","handleChangeSpeed","speedname","curSpeed","handleRandomGenerate","arrayBar","randomGenerateArray","handleChangeArraySize","event","handleVisualize","visualize","Navbar","variant","Brand","href","Nav","valueLabelDisplay","defaultValue","onChange","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9e112728.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport \"./Navbar.css\";\r\n\r\nclass Navitem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { name: props.name, type: props.type, curItem: props.curItem };\r\n  }\r\n\r\n  handleChangeItem = item => {\r\n    this.setState({ curItem: item });\r\n    this.props.onChangeItem(item);\r\n  };\r\n\r\n  render() {\r\n    const { type } = this.state;\r\n    if (type === \"button\") {\r\n      return (\r\n        <li>\r\n          <Button id=\"button\" onClick={() => this.props.onClick()}>\r\n            {this.state.name}\r\n          </Button>\r\n        </li>\r\n      );\r\n    } else {\r\n      return (\r\n        <li>\r\n          <Dropdown>\r\n            <Dropdown.Toggle id=\"dropdown-toggle\">\r\n              {this.state.name + \" : \" + this.state.curItem + \"  \"}\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n              {this.props.itemList.map(item => {\r\n                return (\r\n                  <Dropdown.Item\r\n                    key={item}\r\n                    onSelect={() => this.handleChangeItem(item)}\r\n                    id=\"dropdown-item\"\r\n                  >\r\n                    {item}\r\n                  </Dropdown.Item>\r\n                );\r\n              })}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </li>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Navitem;\r\n","import React, { Component } from \"react\";\r\nimport \"./Arraybar.css\";\r\n\r\nconst HEIGHT = window.innerHeight;\r\n\r\nclass Element extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: props.value,\r\n      width: props.width,\r\n      animation: animationType.DEFAULT\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onRef(this);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.onRef(undefined);\r\n  }\r\n\r\n  setElement = (value, width) => {\r\n    this.setState({ value, width });\r\n  };\r\n\r\n  setAnimation = animation => {\r\n    this.setState({ animation });\r\n  };\r\n\r\n  render() {\r\n    let { width, value, animation } = this.state;\r\n    let animationname =\r\n      animation === animationType.RED\r\n        ? \"red\"\r\n        : animation === animationType.BLUE\r\n        ? \"blue\"\r\n        : animation === animationType.YELLOW\r\n        ? \"yellow\"\r\n        : animation === animationType.PURPLE\r\n        ? \"purple\"\r\n        : \"\";\r\n    return (\r\n      <div\r\n        className={`array-bar ${animationname}`}\r\n        style={{\r\n          width: `${width}px`,\r\n          height: `${(((value * HEIGHT) / 937) * 790) / 250}px`\r\n        }}\r\n      ></div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Element;\r\n\r\nexport const animationType = {\r\n  DEFAULT: 1,\r\n  RED: 2,\r\n  BLUE: 3,\r\n  YELLOW: 4,\r\n  PURPLE: 5\r\n};\r\n","function swap(arr, i, j) {\r\n  let temp = arr[i];\r\n  arr[i] = arr[j];\r\n  arr[j] = temp;\r\n}\r\n\r\n// bubble sort implentation\r\nexport function bubbleSort(arr) {\r\n  const n = arr.length;\r\n  let animations = [];\r\n\r\n  // bubble the maximum to the end\r\n  for (let i = 0; i < n; i++) {\r\n    for (let j = 0; j < n - i - 1; j++) {\r\n      // for comparing animation\r\n      animations.push([j, j + 1]);\r\n      animations.push([j, j + 1]);\r\n      animations.push([j, j + 1]);\r\n      if (arr[j] > arr[j + 1]) {\r\n        // swap\r\n        animations.push([j, j + 1, arr[j], arr[j + 1], j + 1 === n - i - 1]); // for swapping animation\r\n        swap(arr, j, j + 1);\r\n      } else {\r\n        animations.push([j, j + 1, arr[j + 1], arr[j], j + 1 === n - i - 1]); // not swapping\r\n      }\r\n    }\r\n  }\r\n\r\n  // final animation\r\n  animations.push([0, 0]);\r\n  animations.push([0, 0]);\r\n  animations.push([0, 0]);\r\n  animations.push([0, 0, arr[0], arr[0], true]);\r\n\r\n  return animations;\r\n}\r\n\r\n// insertion sort implentation\r\nexport function insertionSort(arr) {\r\n  const n = arr.length;\r\n  let animations = [];\r\n\r\n  // insert every element\r\n  for (let i = 1; i < n; i++) {\r\n    let j;\r\n    let temp = arr[i];\r\n\r\n    // find the spot to insert in sorted array\r\n    for (j = i; j > 0 && arr[j - 1] > temp; j--) {\r\n      // for comparing animation\r\n      animations.push(j);\r\n      animations.push(j);\r\n      animations.push(j);\r\n\r\n      // for overwriting animation\r\n      animations.push([j, arr[j - 1], i === n - 1]);\r\n      arr[j] = arr[j - 1];\r\n    }\r\n\r\n    // for comparing animation\r\n    animations.push(j);\r\n    animations.push(j);\r\n    animations.push(j);\r\n\r\n    // for overwriting animation\r\n    animations.push([j, temp, i === n - 1]);\r\n\r\n    arr[j] = temp;\r\n\r\n    // sorted animations\r\n    for (let k = j - 1; k >= 0; k--) {\r\n      // for comparing animation\r\n      animations.push(k);\r\n      animations.push(k);\r\n      animations.push(k);\r\n\r\n      // for overwriting animation\r\n      animations.push([k, arr[k], i === n - 1]);\r\n    }\r\n  }\r\n\r\n  return animations;\r\n}\r\n\r\n// quick sort implentation\r\nfunction getRandomPivot(l, r) {\r\n  return l + Math.floor(Math.random() * (r - l + 1));\r\n}\r\n\r\nfunction partition(arr, l, r, pivot, animations) {\r\n  let partitionIdx = l - 1;\r\n  const pivotElement = arr[pivot];\r\n\r\n  animations.push([r, pivot]);\r\n  animations.push([r, pivot]);\r\n  animations.push([r, pivot]);\r\n  animations.push([r, pivot, arr[r], arr[pivot], 2]);\r\n  swap(arr, r, pivot); // swap pivot with right most elemtn;\r\n\r\n  for (let i = l; i < r; i++) {\r\n    animations.push([i, partitionIdx + 1]);\r\n    animations.push([i, partitionIdx + 1]);\r\n    animations.push([i, partitionIdx + 1]);\r\n\r\n    if (arr[i] <= pivotElement) {\r\n      animations.push([i, partitionIdx + 1, arr[i], arr[partitionIdx + 1], 3]);\r\n      swap(arr, i, ++partitionIdx);\r\n    } else {\r\n      animations.push([i, partitionIdx + 1, arr[partitionIdx + 1], arr[i], 3]);\r\n    }\r\n  }\r\n\r\n  animations.push([r, partitionIdx + 1]);\r\n  animations.push([r, partitionIdx + 1]);\r\n  animations.push([r, partitionIdx + 1]);\r\n  animations.push([r, partitionIdx + 1, arr[r], arr[partitionIdx + 1], 1]);\r\n  swap(arr, r, ++partitionIdx); // swap pivot back\r\n  return partitionIdx;\r\n}\r\n\r\nfunction quickSortHelper(arr, l, r, animations) {\r\n  if (l > r) return;\r\n  const pivot = getRandomPivot(l, r);\r\n  const partitionIdx = partition(arr, l, r, pivot, animations);\r\n\r\n  quickSortHelper(arr, partitionIdx + 1, r, animations);\r\n  quickSortHelper(arr, l, partitionIdx - 1, animations);\r\n}\r\n\r\nexport function quickSort(arr) {\r\n  let animations = [];\r\n  quickSortHelper(arr, 0, arr.length - 1, animations);\r\n  return animations;\r\n}\r\n\r\n// merge sort implentation\r\nfunction merge(arr, l, r, m, animations) {\r\n  const n1 = m - l + 1;\r\n  const n2 = r - m;\r\n  const L = new Array(n1);\r\n  const R = new Array(n2);\r\n\r\n  // copy left array\r\n  for (let i = 0; i < n1; i++) {\r\n    L[i] = arr[i + l];\r\n  }\r\n\r\n  // copy right array\r\n  for (let i = 0; i < n2; i++) {\r\n    R[i] = arr[i + m + 1];\r\n  }\r\n\r\n  let k = l;\r\n  let idxL = 0; // index for left array\r\n  let idxR = 0; // index for right array\r\n  const isSorted = l === 0 && r === arr.length - 1;\r\n\r\n  // merge two arrays\r\n  while (idxL < n1 && idxR < n2) {\r\n    animations.push([idxL + l, idxR + m + 1]); // comparing elements at i ,j in the orignal array\r\n    animations.push([idxL + l, idxR + m + 1]); // comparing elements at i ,j in the orignal array\r\n    animations.push([idxL + l, idxR + m + 1]); // comparing elements at i ,j in the orignal array\r\n\r\n    if (L[idxL] < R[idxR]) {\r\n      animations.push([k, L[idxL], isSorted, idxL + l]); // replace element at k of the original array with L[idxL]\r\n      arr[k++] = L[idxL++];\r\n    } else {\r\n      animations.push([k, R[idxR], false, k]); // replace element at k of the original array with R[idxR];\r\n      arr[k++] = R[idxR++];\r\n    }\r\n  }\r\n\r\n  // add remaining elements\r\n  while (idxL < n1) {\r\n    animations.push([idxL + l, idxL + l]);\r\n    animations.push([idxL + l, idxL + l]);\r\n    animations.push([idxL + l, idxL + l]);\r\n    animations.push([k, L[idxL], isSorted, idxL + l]); // replace element at k of the original array with L[idxL]\r\n    arr[k++] = L[idxL++];\r\n  }\r\n\r\n  while (idxR < n2) {\r\n    animations.push([idxR + m + 1, idxR + m + 1]);\r\n    animations.push([idxR + m + 1, idxR + m + 1]);\r\n    animations.push([idxR + m + 1, idxR + m + 1]);\r\n    animations.push([k, R[idxR], false, k]); // replace element at k of the original array with R[idxR];\r\n    arr[k++] = R[idxR++];\r\n  }\r\n\r\n  // sorted animations\r\n  if (isSorted) {\r\n    for (let i = idxL + l; i <= r; i++) {\r\n      animations.push([i, i]);\r\n      animations.push([i, i]);\r\n      animations.push([i, i]);\r\n      animations.push([i, arr[i], isSorted, i]);\r\n    }\r\n  }\r\n}\r\n\r\nfunction mergeSortHelper(arr, l, r, animations) {\r\n  if (l === r) return;\r\n\r\n  const m = l + Math.floor((r - l) / 2);\r\n  mergeSortHelper(arr, l, m, animations);\r\n  mergeSortHelper(arr, m + 1, r, animations);\r\n  merge(arr, l, r, m, animations);\r\n}\r\n\r\nexport function mergeSort(arr) {\r\n  let animations = [];\r\n  mergeSortHelper(arr, 0, arr.length - 1, animations);\r\n  return animations;\r\n}\r\n\r\n// heap sort implentation\r\nfunction heapify(arr, n, i, animations) {\r\n  if (n === 0) return;\r\n  let largestIdx = i;\r\n  let l = 2 * i + 1; // left child\r\n  let r = 2 * i + 2; // right child\r\n\r\n  if (l < n && arr[l] > arr[largestIdx]) largestIdx = l; // heapify left child\r\n  if (r < n && arr[r] > arr[largestIdx]) largestIdx = r; // heapify right child\r\n\r\n  animations.push([i, largestIdx]);\r\n  animations.push([i, largestIdx]);\r\n  animations.push([i, largestIdx]);\r\n  // if more heapify needed\r\n  if (largestIdx !== i) {\r\n    // swap\r\n    animations.push([i, largestIdx, arr[i], arr[largestIdx], false]);\r\n    swap(arr, i, largestIdx);\r\n\r\n    // heapify affectd subtrees\r\n    heapify(arr, n, largestIdx, animations);\r\n  } else {\r\n    animations.push([i, largestIdx, arr[largestIdx], arr[i], false]);\r\n  }\r\n}\r\n\r\nexport function heapSort(arr) {\r\n  const n = arr.length;\r\n  let animations = [];\r\n\r\n  // build max heap\r\n  for (let i = Math.floor(n / 2) - 1; i >= 0; i--)\r\n    heapify(arr, n, i, animations);\r\n\r\n  // extract sorted element\r\n  for (let i = n - 1; i >= 0; i--) {\r\n    // swap to the end\r\n    animations.push([0, i]);\r\n    animations.push([0, i]);\r\n    animations.push([0, i]);\r\n    animations.push([0, i, arr[0], arr[i], true]);\r\n    swap(arr, 0, i);\r\n\r\n    // call max heapify on the reduced heap\r\n    heapify(arr, i, 0, animations);\r\n  }\r\n\r\n  return animations;\r\n}\r\n\r\n// radix sort implentation\r\nexport function radixSort(arr) {}\r\n\r\n// bucket sort implentation\r\nexport function bucketSort(arr) {}\r\n","import React, { Component } from \"react\";\r\nimport Element from \"./Element\";\r\nimport { animationType } from \"./Element\";\r\nimport \"./Arraybar.css\";\r\nimport {\r\n  bubbleSort,\r\n  insertionSort,\r\n  quickSort,\r\n  mergeSort,\r\n  heapSort,\r\n  radixSort,\r\n  bucketSort\r\n} from \"../algorithms/sorting\";\r\n\r\nconst HEIGHT = window.innerHeight;\r\nconst WIDTH = window.innerWidth;\r\n\r\nfunction randomIntFromInterval(min, max) {\r\n  return min + Math.floor(Math.random() * (max - min + 1));\r\n}\r\n\r\nclass Arraybar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { generate: 0 };\r\n\r\n    // construct initial array\r\n    this.arraySize = 75; // default array size\r\n    this.width = Math.ceil((900 / this.arraySize / 1920) * WIDTH); // width of the array bar depends on the array size\r\n    this.array = [];\r\n    this.isVisualized = false;\r\n    this.constructInitArray();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onRef(this);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.onRef(undefined);\r\n  }\r\n\r\n  constructInitArray() {\r\n    for (let i = 0; i < this.arraySize; i++) {\r\n      this.array.push(randomIntFromInterval(10, 250));\r\n    }\r\n  }\r\n\r\n  setArray() {\r\n    for (let i = 0; i < this.array.length; i++) {\r\n      this[`element-${i}`].setElement(this.array[i], this.width);\r\n      this[`element-${i}`].setAnimation(animationType.DEFAULT);\r\n    }\r\n  }\r\n\r\n  randomGenerateArray() {\r\n    if (this.isVisualized) return;\r\n    this.width = Math.ceil((900 / this.arraySize / 1920) * WIDTH); // reset width\r\n    this.array = []; // reset array\r\n\r\n    for (let i = 0; i < this.arraySize; i++) {\r\n      this.array.push(randomIntFromInterval(10, 250));\r\n    }\r\n\r\n    this.setState({ generate: this.state.generate ^ 1 }, this.setArray);\r\n  }\r\n\r\n  resetAnimations() {\r\n    for (let i = 0; i < this.arraySize; i++) {\r\n      this[`element-${i}`].setAnimation(animationType.DEFAULT);\r\n    }\r\n  }\r\n\r\n  visualize(algorithm, speed) {\r\n    if (this.isVisualized) return;\r\n    this.isVisualized = true;\r\n\r\n    this.resetAnimations();\r\n\r\n    let animations = [];\r\n    switch (algorithm) {\r\n      case \"Bubble Sort\":\r\n        animations = bubbleSort(this.array);\r\n        this.bubbleSortAnimations(animations, speed);\r\n        break;\r\n      case \"Insertion Sort\":\r\n        animations = insertionSort(this.array);\r\n        this.insertionSortAnimations(animations, speed);\r\n        break;\r\n      case \"Quick Sort\":\r\n        animations = quickSort(this.array);\r\n        this.quickSortAnimations(animations, speed);\r\n        break;\r\n      case \"Merge Sort\":\r\n        animations = mergeSort(this.array);\r\n        this.mergeSortAnimations(animations, speed);\r\n        break;\r\n      case \"Heap Sort\":\r\n        animations = heapSort(this.array);\r\n        this.heapSortAnimations(animations, speed);\r\n        break;\r\n      case \"Radix Sort\":\r\n        animations = radixSort(this.array);\r\n        this.radixSortAnimations(animations, speed);\r\n        break;\r\n      case \"Bucket Sort\":\r\n        animations = bucketSort(this.array);\r\n        this.bucketSortAnimations(animations, speed);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // finish visualization\r\n    setTimeout(() => {\r\n      this.isVisualized = false;\r\n    }, 310 + animations.length * speed);\r\n  }\r\n\r\n  bubbleSortAnimations(animations, speed) {\r\n    for (let i = 0; i < animations.length; i++) {\r\n      if (i % 4 === 3) {\r\n        // swapping\r\n        const [\r\n          barOneIdx,\r\n          barTwoIdx,\r\n          barOneValue,\r\n          barTwoValue,\r\n          isSorted\r\n        ] = animations[i];\r\n        setTimeout(() => {\r\n          this[`element-${barOneIdx}`].setElement(barTwoValue, this.width);\r\n          this[`element-${barTwoIdx}`].setElement(barOneValue, this.width);\r\n          if (isSorted)\r\n            this[`element-${barTwoIdx}`].setAnimation(animationType.PURPLE);\r\n        }, 300 + i * speed);\r\n      } else {\r\n        // comparing\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        const color =\r\n          i % 4 === 0\r\n            ? animationType.RED\r\n            : i % 4 === 1\r\n            ? animationType.BLUE\r\n            : animationType.DEFAULT;\r\n        setTimeout(() => {\r\n          this[`element-${barOneIdx}`].setAnimation(color);\r\n          this[`element-${barTwoIdx}`].setAnimation(color);\r\n        }, 300 + i * speed);\r\n      }\r\n    }\r\n  }\r\n\r\n  insertionSortAnimations(animations, speed) {\r\n    for (let i = 0; i < animations.length; i++) {\r\n      if (i % 4 === 3) {\r\n        // overwriting\r\n        const [barIdx, newValue, isSorted] = animations[i];\r\n        setTimeout(() => {\r\n          this[`element-${barIdx}`].setElement(newValue, this.width);\r\n          if (isSorted)\r\n            this[`element-${barIdx}`].setAnimation(animationType.PURPLE);\r\n        }, 300 + i * speed);\r\n      } else {\r\n        // comparing\r\n        const barIdx = animations[i];\r\n        const color =\r\n          i % 4 === 0\r\n            ? animationType.RED\r\n            : i % 4 === 1\r\n            ? animationType.BLUE\r\n            : animationType.DEFAULT;\r\n        setTimeout(() => {\r\n          this[`element-${barIdx}`].setAnimation(color);\r\n        }, 300 + i * speed);\r\n      }\r\n    }\r\n  }\r\n\r\n  quickSortAnimations(animations, speed) {\r\n    for (let i = 0; i < animations.length; i++) {\r\n      if (i % 4 === 3) {\r\n        // swapping\r\n        const [\r\n          barOneIdx,\r\n          barTwoIdx,\r\n          barOneValue,\r\n          barTwoValue,\r\n          isPivot\r\n        ] = animations[i];\r\n        setTimeout(() => {\r\n          this[`element-${barOneIdx}`].setElement(barTwoValue, this.width);\r\n          this[`element-${barTwoIdx}`].setElement(barOneValue, this.width);\r\n          if (isPivot === 1) {\r\n            this[`element-${barTwoIdx}`].setAnimation(animationType.PURPLE);\r\n          } else if (isPivot === 2) {\r\n            this[`element-${barOneIdx}`].setAnimation(animationType.YELLOW);\r\n          }\r\n        }, 300 + i * speed);\r\n      } else {\r\n        // comparing\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        const color =\r\n          i % 4 === 0\r\n            ? animationType.RED\r\n            : i % 4 === 1\r\n            ? animationType.BLUE\r\n            : animationType.DEFAULT;\r\n        setTimeout(() => {\r\n          this[`element-${barOneIdx}`].setAnimation(color);\r\n          this[`element-${barTwoIdx}`].setAnimation(color);\r\n        }, 300 + i * speed);\r\n      }\r\n    }\r\n  }\r\n\r\n  mergeSortAnimations(animations, speed) {\r\n    for (let i = 0; i < animations.length; i++) {\r\n      if (i % 4 === 3) {\r\n        // overwriting\r\n        const [barIdx, newValue, isSorted] = animations[i];\r\n        setTimeout(() => {\r\n          this[`element-${barIdx}`].setElement(newValue, this.width);\r\n          if (isSorted) {\r\n            let idx = animations[i][3];\r\n            this[`element-${idx}`].setAnimation(animationType.PURPLE);\r\n          }\r\n        }, 300 + i * speed);\r\n      } else {\r\n        // comparing\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        const color =\r\n          i % 4 === 0\r\n            ? animationType.RED\r\n            : i % 4 === 1\r\n            ? animationType.BLUE\r\n            : animationType.DEFAULT;\r\n        setTimeout(() => {\r\n          this[`element-${barOneIdx}`].setAnimation(color);\r\n          this[`element-${barTwoIdx}`].setAnimation(color);\r\n        }, 300 + i * speed);\r\n      }\r\n    }\r\n  }\r\n\r\n  heapSortAnimations(animations, speed) {\r\n    for (let i = 0; i < animations.length; i++) {\r\n      if (i % 4 === 3) {\r\n        // swapping\r\n        const [\r\n          barOneIdx,\r\n          barTwoIdx,\r\n          barOneValue,\r\n          barTwoValue,\r\n          isSorted\r\n        ] = animations[i];\r\n        setTimeout(() => {\r\n          this[`element-${barOneIdx}`].setElement(barTwoValue, this.width);\r\n          this[`element-${barTwoIdx}`].setElement(barOneValue, this.width);\r\n          if (isSorted)\r\n            this[`element-${barTwoIdx}`].setAnimation(animationType.PURPLE);\r\n        }, 300 + i * speed);\r\n      } else {\r\n        // comparing\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        const color =\r\n          i % 4 === 0\r\n            ? animationType.RED\r\n            : i % 4 === 1\r\n            ? animationType.BLUE\r\n            : animationType.DEFAULT;\r\n        setTimeout(() => {\r\n          this[`element-${barOneIdx}`].setAnimation(color);\r\n          this[`element-${barTwoIdx}`].setAnimation(color);\r\n        }, 300 + i * speed);\r\n      }\r\n    }\r\n  }\r\n\r\n  radixSortAnimations(animations, speed) {}\r\n\r\n  bucketSortAnimations(animations, speed) {}\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"array-container\">\r\n        {this.array.map((value, idx) => {\r\n          return (\r\n            <Element\r\n              key={idx}\r\n              value={value}\r\n              width={this.width}\r\n              onRef={ref => (this[`element-${idx}`] = ref)}\r\n            ></Element>\r\n          );\r\n        })}\r\n\r\n        <div\r\n          className=\"array-bar\"\r\n          key={\"extra\"}\r\n          style={{\r\n            height: `${(((250 * HEIGHT) / 937) * 790) / 250}px`\r\n          }}\r\n        ></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Arraybar;\r\n","import React, { Component } from \"react\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Navitem from \"./Navitem\";\r\nimport Arraybar from \"./Arraybar\";\r\nimport \"./Navbar.css\";\r\n\r\nfunction ValueLabelComponent(props) {\r\n  const { children, open, value } = props;\r\n\r\n  return (\r\n    <Tooltip open={open} enterTouchDelay={0} title={value}>\r\n      {children}\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\nconst PrettoSlider = withStyles({\r\n  root: {\r\n    color: \"rgb(76, 187, 159)\",\r\n    height: 8,\r\n    width: 160,\r\n    marginTop: 2,\r\n    marginRight: 32,\r\n    marginLeft: -15\r\n  },\r\n  thumb: {\r\n    height: 24,\r\n    width: 24,\r\n    backgroundColor: \"#fff\",\r\n    border: \"2px solid currentColor\",\r\n    marginTop: -8,\r\n    marginLeft: -7,\r\n    \"&:focus,&:hover,&$active\": {\r\n      boxShadow: \"inherit\"\r\n    }\r\n  },\r\n  active: {},\r\n  valueLabel: {\r\n    left: \"calc(-50% + 4px)\",\r\n    className: \"PrivateValueLabel-circle-20\"\r\n  },\r\n  track: {\r\n    height: 8,\r\n    borderRadius: 4\r\n  },\r\n  rail: {\r\n    height: 8,\r\n    borderRadius: 4\r\n  }\r\n})(Slider);\r\n\r\nconst algorithms = [\r\n  \"Bubble Sort\",\r\n  \"Insertion Sort\",\r\n  \"Quick Sort\",\r\n  \"Merge Sort\",\r\n  \"Heap Sort\",\r\n  \"Radix Sort\",\r\n  \"Bucket Sort\"\r\n];\r\n\r\nconst speeds = [\"Fast\", \"Medium\", \"Slow\"];\r\n\r\nclass SortingVisualizer extends Component {\r\n  constructor() {\r\n    super();\r\n    this.curAlgorithm = \"Bubble Sort\";\r\n    this.curSpeed = \"Fast\";\r\n  }\r\n\r\n  handleChangeAlgorithm = algorithm => {\r\n    this.curAlgorithm = algorithm;\r\n  };\r\n\r\n  handleChangeSpeed = speedname => {\r\n    this.curSpeed = speedname;\r\n  };\r\n\r\n  handleRandomGenerate = () => {\r\n    this.arrayBar.randomGenerateArray();\r\n  };\r\n\r\n  handleChangeArraySize = (event, newValue) => {\r\n    if (newValue !== this.arrayBar.arraySize && !this.arrayBar.isVisualized) {\r\n      this.arrayBar.arraySize = newValue;\r\n      this.arrayBar.randomGenerateArray();\r\n    }\r\n  };\r\n\r\n  handleVisualize = () => {\r\n    let speed = 5;\r\n    switch (this.curSpeed) {\r\n      case \"Fast\":\r\n        speed = 5;\r\n        break;\r\n      case \"Medium\":\r\n        speed = 7;\r\n        break;\r\n      case \"Slow\":\r\n        speed = 9;\r\n        break;\r\n      default:\r\n        speed = 3;\r\n        break;\r\n    }\r\n    this.arrayBar.visualize(this.curAlgorithm, speed);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar variant=\"custom\">\r\n          <Navbar.Brand href=\"#home\">Sorting Visualizer</Navbar.Brand>\r\n          <Nav>\r\n            <Navitem\r\n              name={\"Visualize\"}\r\n              type={\"button\"}\r\n              onClick={this.handleVisualize}\r\n            />\r\n            <Navitem\r\n              name={\"Algorithms\"}\r\n              type={\"dropdown\"}\r\n              itemList={algorithms}\r\n              curItem={this.curAlgorithm}\r\n              onChangeItem={this.handleChangeAlgorithm}\r\n            />\r\n            <Navitem\r\n              name={\"Random Generate\"}\r\n              type={\"button\"}\r\n              onClick={this.handleRandomGenerate}\r\n            />\r\n            <PrettoSlider\r\n              valueLabelDisplay=\"auto\"\r\n              defaultValue={75}\r\n              min={8}\r\n              max={150}\r\n              ValueLabelComponent={ValueLabelComponent}\r\n              onChange={this.handleChangeArraySize}\r\n            />\r\n            <Navitem\r\n              name={\"Speed\"}\r\n              type={\"dropdown\"}\r\n              itemList={speeds}\r\n              curItem={this.curSpeed}\r\n              onChangeItem={this.handleChangeSpeed}\r\n            />\r\n          </Nav>\r\n        </Navbar>\r\n        <Arraybar onRef={ref => (this.arrayBar = ref)} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SortingVisualizer;\r\n","import React from \"react\";\r\nimport SortingVisualizer from \"./components/SortingVisualizer\";\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <SortingVisualizer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}