{"version":3,"sources":["components/Navitem.jsx","components/Element.jsx","algorithms/sorting.js","components/Arraybar.jsx","components/SortingVisualizer.jsx","App.js","serviceWorker.js","index.js"],"names":["Navitem","props","handleChangeItem","item","setState","curItem","onChangeItem","state","name","type","this","Button","id","onClick","Dropdown","Toggle","Menu","itemList","map","Item","key","onSelect","Component","HEIGHT","window","innerHeight","Element","setElement","value","width","setAnimation","animation","animationType","DEFAULT","onRef","undefined","animationname","RED","BLUE","className","style","height","swap","arr","i","j","temp","quickSortHelper","l","r","partitionIdx","pivot","pivotElement","partition","Math","floor","random","getRandomPivot","mergeSortHelper","animations","m","n1","n2","L","Array","R","k","idxL","idxR","push","merge","WIDTH","innerWidth","randomIntFromInterval","min","max","Arraybar","generate","arraySize","ceil","array","isVisualized","constructInitArray","length","setArray","algorithm","speed","n","bubbleSort","insertionSort","mergeSort","mergeSortAnimations","setTimeout","barOneIdx","barTwoIdx","barIdx","newValue","idx","ref","algorithms","speeds","SortingVisualizer","handleChangeAlgorithm","curAlgorithm","handleChangeSpeed","speedname","curSpeed","handleRandomGenerate","arrayBar","randomGenerateArray","handleChangeArraySize","handleVisualize","visualize","Navbar","variant","Brand","href","Nav","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c11f6970.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport \"./Navbar.css\";\r\n\r\nclass Navitem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { name: props.name, type: props.type, curItem: props.curItem };\r\n  }\r\n\r\n  handleChangeItem = item => {\r\n    this.setState({ curItem: item });\r\n    this.props.onChangeItem(item);\r\n  };\r\n\r\n  render() {\r\n    const { type } = this.state;\r\n    if (type === \"button\") {\r\n      return (\r\n        <li>\r\n          <Button id=\"button\" onClick={() => this.props.onClick()}>\r\n            {this.state.name}\r\n          </Button>\r\n        </li>\r\n      );\r\n    } else {\r\n      return (\r\n        <li>\r\n          <Dropdown>\r\n            <Dropdown.Toggle id=\"dropdown-toggle\">\r\n              {this.state.name + \" : \" + this.state.curItem + \"  \"}\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n              {this.props.itemList.map(item => {\r\n                return (\r\n                  <Dropdown.Item\r\n                    key={item}\r\n                    onSelect={() => this.handleChangeItem(item)}\r\n                    id=\"dropdown-item\"\r\n                  >\r\n                    {item}\r\n                  </Dropdown.Item>\r\n                );\r\n              })}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </li>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Navitem;\r\n","import React, { Component } from \"react\";\r\nimport \"./Arraybar.css\";\r\n\r\nconst HEIGHT = window.innerHeight;\r\n\r\nclass Element extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: props.value,\r\n      width: props.width,\r\n      animation: animationType.DEFAULT\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onRef(this);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.onRef(undefined);\r\n  }\r\n\r\n  setElement = (value, width) => {\r\n    this.setState({ value, width });\r\n  };\r\n\r\n  setAnimation = animation => {\r\n    this.setState({ animation });\r\n  };\r\n\r\n  render() {\r\n    let { width, value, animation } = this.state;\r\n    let animationname =\r\n      animation === animationType.RED\r\n        ? \"red\"\r\n        : animation === animationType.BLUE\r\n        ? \"blue\"\r\n        : \"\";\r\n    return (\r\n      <div\r\n        className={`array-bar ${animationname}`}\r\n        style={{\r\n          width: `${width}px`,\r\n          height: `${(((value * HEIGHT) / 937) * 830) / 500}px`\r\n        }}\r\n      ></div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Element;\r\n\r\nexport const animationType = {\r\n  DEFAULT: 1,\r\n  RED: 2,\r\n  BLUE: 3\r\n};\r\n","// bubble sort implentation\r\nexport function bubbleSort(arr) {\r\n  const n = arr.length;\r\n\r\n  // bubble the maximum to the end\r\n  for (let i = 0; i < n; i++) {\r\n    for (let j = 0; j < n - i - 1; j++) {\r\n      if (arr[j] > arr[j + 1]) {\r\n        // swap\r\n        let temp = arr[j];\r\n        arr[j] = arr[j + 1];\r\n        arr[j + 1] = temp;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// insertion sort implentation\r\nexport function insertionSort(arr) {\r\n  const n = arr.length;\r\n\r\n  // insert every element\r\n  for (let i = 1; i < n; i++) {\r\n    let j;\r\n    let temp = arr[i];\r\n\r\n    // find the spot to insert in sorted array\r\n    for (j = i; j > 0 && arr[j - 1] > temp; j--) {\r\n      arr[j] = arr[j - 1];\r\n    }\r\n\r\n    arr[j] = temp;\r\n  }\r\n}\r\n\r\n// quick sort implentation\r\nfunction getRandomPivot(l, r) {\r\n  return l + Math.floor(Math.random() * (r - l + 1));\r\n}\r\n\r\nfunction swap(arr, i, j) {\r\n  let temp = arr[i];\r\n  arr[i] = arr[j];\r\n  arr[j] = temp;\r\n}\r\n\r\nfunction partition(arr, l, r, pivot) {\r\n  let partitionIdx = l - 1;\r\n  const pivotElement = arr[pivot];\r\n  swap(arr, r, pivot); // swap pivot with right most elemtn;\r\n\r\n  for (let i = l; i < r; i++) {\r\n    if (arr[i] <= pivotElement) swap(arr, i, ++partitionIdx);\r\n  }\r\n\r\n  swap(arr, r, ++partitionIdx); // swap pivot back\r\n  return partitionIdx;\r\n}\r\n\r\nfunction quickSortHelper(arr, l, r) {\r\n  if (l >= r) return;\r\n  const pivot = getRandomPivot(l, r);\r\n  const partitionIdx = partition(arr, l, r, pivot);\r\n\r\n  quickSortHelper(arr, l, partitionIdx - 1);\r\n  quickSortHelper(arr, partitionIdx + 1, r);\r\n}\r\n\r\nexport function quickSort(arr) {\r\n  quickSortHelper(arr, 0, arr.length - 1);\r\n}\r\n\r\n// merge sort implentation\r\nfunction merge(arr, l, r, m, animations) {\r\n  const n1 = m - l + 1;\r\n  const n2 = r - m;\r\n  const L = new Array(n1);\r\n  const R = new Array(n2);\r\n\r\n  // copy left array\r\n  for (let i = 0; i < n1; i++) {\r\n    L[i] = arr[i + l];\r\n  }\r\n\r\n  // copy right array\r\n  for (let i = 0; i < n2; i++) {\r\n    R[i] = arr[i + m + 1];\r\n  }\r\n\r\n  let k = l;\r\n  let idxL = 0; // index for left array\r\n  let idxR = 0; // index for right array\r\n\r\n  // merge two arrays\r\n  while (idxL < n1 && idxR < n2) {\r\n    animations.push([idxL + l, idxR + m + 1]); // comparing elements at i ,j in the orignal array\r\n    animations.push([idxL + l, idxR + m + 1]); // comparing elements at i ,j in the orignal array\r\n    animations.push([idxL + l, idxR + m + 1]); // comparing elements at i ,j in the orignal array\r\n\r\n    if (L[idxL] < R[idxR]) {\r\n      animations.push([k, L[idxL]]); // replace element at k of the original array with L[idxL]\r\n      arr[k++] = L[idxL++];\r\n    } else {\r\n      animations.push([k, R[idxR]]); // replace element at k of the original array with R[idxR];\r\n      arr[k++] = R[idxR++];\r\n    }\r\n  }\r\n\r\n  // add remaining elements\r\n  while (idxL < n1) {\r\n    animations.push([idxL + l, idxL + l]);\r\n    animations.push([idxL + l, idxL + l]);\r\n    animations.push([idxL + l, idxL + l]);\r\n    animations.push([k, L[idxL]]); // replace element at k of the original array with L[idxL]\r\n    arr[k++] = L[idxL++];\r\n  }\r\n\r\n  while (idxR < n2) {\r\n    animations.push([idxR + m + 1, idxR + m + 1]);\r\n    animations.push([idxR + m + 1, idxR + m + 1]);\r\n    animations.push([idxR + m + 1, idxR + m + 1]);\r\n    animations.push([k, R[idxR]]); // replace element at k of the original array with R[idxR];\r\n    arr[k++] = R[idxR++];\r\n  }\r\n}\r\n\r\nfunction mergeSortHelper(arr, l, r, animations) {\r\n  if (l === r) return;\r\n\r\n  const m = l + Math.floor((r - l) / 2);\r\n  mergeSortHelper(arr, l, m, animations);\r\n  mergeSortHelper(arr, m + 1, r, animations);\r\n  merge(arr, l, r, m, animations);\r\n}\r\n\r\nexport function mergeSort(arr) {\r\n  let animations = [];\r\n  mergeSortHelper(arr, 0, arr.length - 1, animations);\r\n  return animations;\r\n}\r\n\r\n// heap sort implentation\r\nexport function heapSort(arr) {}\r\n\r\n// radix sort implentation\r\nexport function radixSort(arr) {}\r\n\r\n// bucket sort implentation\r\nexport function bucketSort(arr) {}\r\n","import React, { Component } from \"react\";\r\nimport Element from \"./Element\";\r\nimport { animationType } from \"./Element\";\r\nimport \"./Arraybar.css\";\r\nimport {\r\n  bubbleSort,\r\n  insertionSort,\r\n  quickSort,\r\n  mergeSort,\r\n  heapSort,\r\n  radixSort,\r\n  bucketSort\r\n} from \"../algorithms/sorting\";\r\n\r\nconst HEIGHT = window.innerHeight;\r\nconst WIDTH = window.innerWidth;\r\n\r\nfunction randomIntFromInterval(min, max) {\r\n  return min + Math.floor(Math.random() * (max - min + 1));\r\n}\r\n\r\nclass Arraybar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { generate: 0 };\r\n\r\n    // construct initial array\r\n    this.arraySize = Math.floor(WIDTH / 12);\r\n    this.width = Math.ceil(800 / this.arraySize) + 1; // width of the array bar depends on the array size\r\n    this.array = [];\r\n    this.isVisualized = false;\r\n    this.constructInitArray();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onRef(this);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.onRef(undefined);\r\n  }\r\n\r\n  constructInitArray() {\r\n    for (let i = 0; i < this.arraySize; i++) {\r\n      this.array.push(randomIntFromInterval(5, 500));\r\n    }\r\n  }\r\n\r\n  setArray() {\r\n    for (let i = 0; i < this.array.length; i++) {\r\n      this[`element-${i}`].setElement(this.array[i], this.width);\r\n    }\r\n  }\r\n\r\n  randomGenerateArray() {\r\n    // if (this.isVisualized) return;\r\n    this.arraySize = Math.floor(WIDTH / 10); // reset array size\r\n    this.width = Math.ceil(800 / this.arraySize); // reset width\r\n    this.array = []; // reset array\r\n\r\n    for (let i = 0; i < this.arraySize; i++) {\r\n      this.array.push(randomIntFromInterval(5, 500));\r\n    }\r\n\r\n    this.setState({ generate: this.state.generate ^ 1 }, this.setArray);\r\n  }\r\n\r\n  visualize(algorithm, speed) {\r\n    // if (this.isVisualized) return;\r\n    this.isVisualized = true;\r\n\r\n    let animations = [];\r\n    switch (algorithm) {\r\n      case \"Bubble Sort\":\r\n        bubbleSort(this.array);\r\n        break;\r\n      case \"Insertion Sort\":\r\n        insertionSort(this.array);\r\n        break;\r\n      case \"Quick Sort\":\r\n        quickSort(this.array);\r\n        break;\r\n      case \"Merge Sort\":\r\n        animations = mergeSort(this.array);\r\n        this.mergeSortAnimations(animations, speed);\r\n        break;\r\n      case \"Heap Sort\":\r\n        heapSort(this.array);\r\n        break;\r\n      case \"Radix Sort\":\r\n        radixSort(this.array);\r\n        break;\r\n      case \"Bucket Sort\":\r\n        bucketSort(this.array);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // finish visualization\r\n    setTimeout(() => {\r\n      this.isVisualized = false;\r\n    }, 10 + (animations.length + 1) * speed);\r\n  }\r\n\r\n  mergeSortAnimations(animations, speed) {\r\n    for (let i = 0; i < animations.length; i++) {\r\n      if (i % 4 === 0) {\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        setTimeout(() => {\r\n          this[`element-${barOneIdx}`].setAnimation(animationType.RED);\r\n          this[`element-${barTwoIdx}`].setAnimation(animationType.RED);\r\n        }, i * speed);\r\n      } else if (i % 4 === 1) {\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        setTimeout(() => {\r\n          this[`element-${barOneIdx}`].setAnimation(animationType.BLUE);\r\n          this[`element-${barTwoIdx}`].setAnimation(animationType.BLUE);\r\n        }, i * speed);\r\n      } else if (i % 4 === 2) {\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        setTimeout(() => {\r\n          this[`element-${barOneIdx}`].setAnimation(animationType.DEFAULT);\r\n          this[`element-${barTwoIdx}`].setAnimation(animationType.DEFAULT);\r\n        }, i * speed);\r\n      } else {\r\n        const [barIdx, newValue] = animations[i];\r\n        setTimeout(() => {\r\n          this[`element-${barIdx}`].setElement(newValue, this.width);\r\n        }, i * speed);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"array-container\">\r\n        {this.array.map((value, idx) => {\r\n          return (\r\n            <Element\r\n              key={idx}\r\n              value={value}\r\n              width={this.width}\r\n              onRef={ref => (this[`element-${idx}`] = ref)}\r\n            ></Element>\r\n          );\r\n        })}\r\n\r\n        <div\r\n          className=\"array-bar\"\r\n          key={\"extra\"}\r\n          style={{\r\n            height: `${(((500 * HEIGHT) / 937) * 830) / 500}px`\r\n          }}\r\n        ></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Arraybar;\r\n","import React, { Component } from \"react\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport Navitem from \"./Navitem\";\r\nimport Arraybar from \"./Arraybar\";\r\nimport \"./Navbar.css\";\r\n\r\nconst algorithms = [\r\n  \"Bubble Sort\",\r\n  \"Insertion Sort\",\r\n  \"Quick Sort\",\r\n  \"Merge Sort\",\r\n  \"Heap Sort\",\r\n  \"Radix Sort\",\r\n  \"Bucket Sort\"\r\n];\r\n\r\nconst speeds = [\"Fast\", \"Medium\", \"Slow\"];\r\n\r\nclass SortingVisualizer extends Component {\r\n  constructor() {\r\n    super();\r\n    this.curAlgorithm = \"Bubble Sort\";\r\n    this.curSpeed = \"Fast\";\r\n  }\r\n\r\n  handleChangeAlgorithm = algorithm => {\r\n    this.curAlgorithm = algorithm;\r\n  };\r\n\r\n  handleChangeSpeed = speedname => {\r\n    this.curSpeed = speedname;\r\n  };\r\n\r\n  handleRandomGenerate = () => {\r\n    this.arrayBar.randomGenerateArray();\r\n  };\r\n\r\n  handleChangeArraySize = () => {};\r\n\r\n  handleVisualize = () => {\r\n    let speed = 5;\r\n    switch (this.curSpeed) {\r\n      case \"Fast\":\r\n        speed = 5;\r\n        break;\r\n      case \"Medium\":\r\n        speed = 7;\r\n        break;\r\n      case \"Slow\":\r\n        speed = 9;\r\n        break;\r\n      default:\r\n        speed = 3;\r\n        break;\r\n    }\r\n    this.arrayBar.visualize(this.curAlgorithm, speed);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar variant=\"custom\">\r\n          <Navbar.Brand href=\"#home\">Sorting Visualizer</Navbar.Brand>\r\n          <Nav>\r\n            <Navitem\r\n              name={\"Visualize\"}\r\n              type={\"button\"}\r\n              onClick={this.handleVisualize}\r\n            />\r\n            <Navitem\r\n              name={\"Random Generate\"}\r\n              type={\"button\"}\r\n              onClick={this.handleRandomGenerate}\r\n            />\r\n            <Navitem\r\n              name={\"Algorithms\"}\r\n              type={\"dropdown\"}\r\n              itemList={algorithms}\r\n              curItem={this.curAlgorithm}\r\n              onChangeItem={this.handleChangeAlgorithm}\r\n            />\r\n            <Navitem\r\n              name={\"Speed\"}\r\n              type={\"dropdown\"}\r\n              itemList={speeds}\r\n              curItem={this.curSpeed}\r\n              onChangeItem={this.handleChangeSpeed}\r\n            />\r\n          </Nav>\r\n        </Navbar>\r\n        <Arraybar onRef={ref => (this.arrayBar = ref)} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SortingVisualizer;\r\n","import React from \"react\";\r\nimport SortingVisualizer from \"./components/SortingVisualizer\";\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <SortingVisualizer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}